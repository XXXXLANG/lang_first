<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.LiveSystem.dao.ChatHistoryDao">
  <resultMap id="BaseResultMap" type="org.example.LiveSystem.entity.ChatHistory">
    <id column="CH_ID" jdbcType="INTEGER" property="chId" />
    <result column="CH_GroupID" jdbcType="INTEGER" property="chGroupid" />
    <result column="CH_FriendID" jdbcType="INTEGER" property="chFriendid" />
    <result column="CH_UserID" jdbcType="INTEGER" property="chUserid" />
    <result column="CH_CreateTime" jdbcType="TIMESTAMP" property="chCreatetime" />
    <result column="CH_Top" jdbcType="INTEGER" property="chTop" />
  </resultMap>
  <sql id="Base_Column_List">
    CH_ID, CH_GroupID, CH_FriendID, CH_UserID, CH_CreateTime, CH_Top
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_history
    where CH_ID = #{chId,jdbcType=INTEGER}
  </select>

  <select id="findChatListBy" resultType="org.example.LiveSystem.entity.ChatHistory">
    select
    <include refid="Base_Column_List" />
    from chat_history
    where CH_UserID = #{uid}
    order by CH_Top desc, CH_CreateTime desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chat_history
    where CH_ID = #{chId,jdbcType=INTEGER}
  </delete>

    <delete id="delChatByUFID">
      delete from chat_history
      where
        CH_UserID = #{uid} and CH_FriendID = #{fid}
        or
        CH_UserID = #{fid} and CH_FriendID = #{uid}
    </delete>

  <delete id="delChatByUGID">
    delete from chat_history
    where
      CH_UserID = #{uid} and CH_GroupID = #{gid}
  </delete>

  <insert id="insert" keyColumn="CH_ID" keyProperty="chId" parameterType="org.example.LiveSystem.entity.ChatHistory" useGeneratedKeys="true">
    insert into chat_history (CH_GroupID, CH_FriendID, CH_UserID, 
      CH_CreateTime, CH_Top)
    values (#{chGroupid,jdbcType=INTEGER}, #{chFriendid,jdbcType=INTEGER}, #{chUserid,jdbcType=INTEGER}, 
      #{chCreatetime,jdbcType=TIMESTAMP}, #{chTop,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="CH_ID" keyProperty="chId" parameterType="org.example.LiveSystem.entity.ChatHistory" useGeneratedKeys="true">
    insert into chat_history
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="chGroupid != null">
        CH_GroupID,
      </if>
      <if test="chFriendid != null">
        CH_FriendID,
      </if>
      <if test="chUserid != null">
        CH_UserID,
      </if>
      <if test="chCreatetime != null">
        CH_CreateTime,
      </if>
      <if test="chTop != null">
        CH_Top,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="chGroupid != null">
        #{chGroupid,jdbcType=INTEGER},
      </if>
      <if test="chFriendid != null">
        #{chFriendid,jdbcType=INTEGER},
      </if>
      <if test="chUserid != null">
        #{chUserid,jdbcType=INTEGER},
      </if>
      <if test="chCreatetime != null">
        #{chCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="chTop != null">
        #{chTop,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.LiveSystem.entity.ChatHistory">
    update chat_history
    <set>
      <if test="chGroupid != null">
        CH_GroupID = #{chGroupid,jdbcType=INTEGER},
      </if>
      <if test="chFriendid != null">
        CH_FriendID = #{chFriendid,jdbcType=INTEGER},
      </if>
      <if test="chUserid != null">
        CH_UserID = #{chUserid,jdbcType=INTEGER},
      </if>
      <if test="chCreatetime != null">
        CH_CreateTime = #{chCreatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="chTop != null">
        CH_Top = #{chTop,jdbcType=INTEGER},
      </if>
    </set>
    where CH_ID = #{chId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.LiveSystem.entity.ChatHistory">
    update chat_history
    set CH_GroupID = #{chGroupid,jdbcType=INTEGER},
      CH_FriendID = #{chFriendid,jdbcType=INTEGER},
      CH_UserID = #{chUserid,jdbcType=INTEGER},
      CH_CreateTime = #{chCreatetime,jdbcType=TIMESTAMP},
      CH_Top = #{chTop,jdbcType=INTEGER}
    where CH_ID = #{chId,jdbcType=INTEGER}
  </update>
</mapper>